---

- hosts: all
  become: yes
  roles:
    - ansible-role-initialize
    - ansible-role-yum-repos
    - ansible-role-git
    - ansible-role-dotfiles
  vars:
    dotfile_users:
      - {
          name: root,
          dest: /root,
          gitname: GIT_ROOT_NAME,
          gitmail: ROOT@EMAIL
        }
      - {
          name: vagrant,
          dest: /home/vagrant,
          gitname: GIT_VAGRANT_NAME,
          gitmail: VAGRANT@EMAIL
        }
      - {
          name: aegir,
          dest: /var/aegir,
          gitname: GIT_AEGIR_NAME,
          gitmail: AEGIR@EMAIL
        }

- hosts: galera
  become: yes
  roles:
    - ansible-role-firewalld
    - ansible-role-mariadb
  vars:
    mysql_root_password: "MYSQL_ROOT_PASSWORD"
    mariadb_install_from_centos: false
    mariadb_my_cnf_configuration: true
    mariadb_galera_configuration: true
    galera_wsrep_cluster_address: gcomm://192.168.33.11,192.168.33.12,192.168.33.13
    galera_wsrep_cluster_name: galera

- hosts: webserver
  become: yes
  roles:
    - ansible-role-firewalld
    - ansible-role-httpd
    - ansible-role-php
    - ansible-role-composer
    - ansible-role-drush

- hosts: aegir
  become: yes
  roles:
    - ansible-role-user
    - ansible-role-aegir
    - ansible-role-aegir-hosting-queued
  vars:
    mysql_root_password: "MYSQL_ROOT_PASSWORD"
    aegir_db_password: "AEGIR_DB_PASSWORD"
    aegir_frontend_url: SUBDOMAIN.DOMAIN.TLD
    aegir_client_email: ADMIN_EMAIL@DOMAIN.TLD
    user_passwordless_sudo: true

- hosts: fullstack
  become: yes
  roles:
    - ansible-role-firewalld
    - ansible-role-httpd
    - ansible-role-php
    - ansible-role-composer
    - ansible-role-drush
    - ansible-role-mariadb
    - ansible-role-user
    - ansible-role-aegir
    - ansible-role-aegir-hosting-queued
  vars:
    mysql_root_password: MYSQL_ROOT_PASSWORD
    aegir_db_password: AEGIR_DB_PASSWORD
    mariadb_install_from_centos: false
    mariadb_my_cnf_configuration: true
    aegir_frontend_url: SUBDOMAIN.DOMAIN.TLD
    aegir_client_email: ADMIN_EMAIL@DOMAIN.TLD
    user_passwordless_sudo: true
    #user_authorized_keys: "{{ lookup('file', '/root/.ssh/id_rsa.pub') }}"
